@using SocialPulse.Core.ViewModels

@model SocialProfileViewModel

@{
    ViewData["Title"] = "Zarządzanie linkami użytkownika " + Model.UserName;
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>@ViewData["Title"]</h2>
            <hr />
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle" id="userLinksTable">
                    <thead class="table-light">
                        <tr>
                            <th>L.p.</th>
                            <th>Tytuł</th>
                            <th>Adres URL</th>
                            <th>Obrazek</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.UserLinks.Count == 0)
                        {
                            <tr>
                                <td colspan="5" class="text-center">Brak linków.</td>
                            </tr>
                        }
                        else
                        {
                            @for (var i = 0; i < Model.UserLinks.Count; i++)
                            {
                                <tr>
                                    <td>@(i + 1)</td>
                                    <td>
                                        <input type="hidden" name="UserLinks[@i].Id" value="@Model.UserLinks[i].Id" />
                                        <input asp-for="UserLinks[@i].Title"
                                               class="form-control"
                                               placeholder="Enter title" />
                                    </td>
                                    <td>
                                        <input asp-for="UserLinks[@i].Url"
                                               class="form-control"
                                               placeholder="Enter URL" />
                                    </td>
                                    <td>
                                        @if (Model.UserLinks[i].Image != null)
                                        {
                                            <img src="@Model.UserLinks[i].ImageBase64"
                                                 alt="Obrazek linku"
                                                 class="img-thumbnail"
                                                 style="width: 50px; height: 50px;" />
                                        }
                                        else
                                        {
                                            <span class="text-muted">Brak obrazka</span>
                                        }
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-success btn-sm save-link">
                                            Zapisz
                                        </button>
                                        <button type="button"
                                                class="btn btn-danger btn-sm remove-link"
                                                onclick="removeLink(this)">
                                            Usuń
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>

            <div class="mt-3">
                <h4>Dodaj link</h4>
                <div class="row g-3">
                    <div class="col-md-4">
                        <input type="text" id="newLinkTitle" class="form-control" placeholder="Enter title" />
                    </div>
                    <div class="col-md-4">
                        <input type="text" id="newLinkUrl" class="form-control" placeholder="Enter URL" />
                    </div>
                    <div class="col-md-3">
                        <input type="file" id="newLinkImage" class="form-control" />
                    </div>
                    <div class="col-md-1">
                        <button type="button" 
                                class="btn btn-primary" 
                                id="addLinkButton"
                                onclick="addLink()">
                            <i class="bi bi-plus-circle"></i> Dodaj
                        </button>
                    </div>
                </div>
                <div id="validationMessage" class="text-danger mt-2" style="display: none;"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        function addLink(){
            const title = $("#newLinkTitle").val().trim();
            const url = $("#newLinkUrl").val().trim();
            const imageInput = $("#newLinkImage")[0];
            const validationMessage = $("#validationMessage");

            validationMessage.hide().text("");

            if (!title) {
                validationMessage.text("Tytuł jest wymagany.").show();
                return;
            }

            if (!url) {
                validationMessage.text("Adres URL jest wymagany.").show();
                return;
            }

            if (!isValidUrl(url)) {
                validationMessage.text("Adres URL jest nieprawidłowy.").show();
                return;
            }


            const formData = new FormData();
            formData.append("Title", title);
            formData.append("Url", url);

            if (imageInput.files.length > 0) {
                formData.append("Image", imageInput.files[0]);
            }

            $.ajax({
                url: '@Url.Action("AddUserLink", "Settings")',
                type: 'POST',
                processData: false,
                contentType: false,
                data: formData,
                success: function (response) {
                    if(!response.isSuccess){
                        logger.error(response.message);
                        validationMessage.text("Wystąpił błąd podczas dodawania linku.").show();
                        return;
                    }
                    const newRow = $(response.data);

                    const currentRowCount = $("#userLinksTable tbody tr").length;
                    newRow.find("input, td").each(function () {
                        const input = $(this);
                        const nameAttr = input.attr("name");

                        if (nameAttr) {
                            input.attr("name", nameAttr.replace("Index", currentRowCount));
                        }
                    });

                    $("#userLinksTable tbody").append(newRow);

                    updateRowsNumeration();

                    clearNewLinkInputs();
                },
                error: function (xhr) {
                    logger.error(xhr.responseText);
                    validationMessage.text("Wystąpił błąd podczas dodawania linku.").show();
                }
            });
        }

        function isValidUrl(string) {
            try {
                new URL(string);
                return true;
            } catch (_) {
                return false;
            }
        }

        function clearNewLinkInputs() {
            $("#newLinkTitle").val("");
            $("#newLinkUrl").val("");
            $("#newLinkImage").val("");
        }

        function removeLink(btn){
            $(btn).closest("tr").remove();
            updateRowsNumeration();
        }

        function updateRowsNumeration() {
            $("#userLinksTable tbody tr").each(function (index, row) {
                $(row).find("td:first").text(index + 1);
            });
        }

    </script>
}